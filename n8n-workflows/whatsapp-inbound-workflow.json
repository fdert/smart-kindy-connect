{
  "name": "WhatsApp Inbound - School System",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "whatsapp-inbound",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-inbound",
      "name": "Webhook - Receive from WhatsApp",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "inbound-webhook-id"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.entry && $json.entry[0] && $json.entry[0].changes && $json.entry[0].changes[0] && $json.entry[0].changes[0].value && $json.entry[0].changes[0].value.messages }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "validate-whatsapp-format",
      "name": "Validate WhatsApp Format",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "// Extract WhatsApp message data\nconst entry = $input.all()[0].json.entry[0];\nconst change = entry.changes[0];\nconst value = change.value;\n\n// Extract message details\nconst message = value.messages[0];\nconst contact = value.contacts[0];\n\n// Format the data for Supabase\nconst formattedData = {\n  from: message.from,\n  message_id: message.id,\n  timestamp: message.timestamp,\n  message_type: message.type,\n  message_body: message.text ? message.text.body : '',\n  contact_name: contact ? contact.profile.name : '',\n  wa_id: contact ? contact.wa_id : message.from,\n  // Add metadata\n  metadata: {\n    phone_number_id: value.metadata.phone_number_id,\n    display_phone_number: value.metadata.display_phone_number\n  }\n};\n\nreturn [{ json: formattedData }];"
      },
      "id": "format-message-data",
      "name": "Format Message Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 220]
    },
    {
      "parameters": {
        "url": "https://ytjodudlnfamvnescumu.supabase.co/functions/v1/whatsapp-inbound",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inl0am9kdWRsbmZhbXZuZXNjdW11Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY1MTYwMzgsImV4cCI6MjA3MjA5MjAzOH0.sXV4caS0mPZ_CjEIzgenbCpQYDhT21T5wuYMUPNisFY"
            },
            {
              "name": "X-Tenant-ID", 
              "value": "22222222-2222-2222-2222-222222222222"
            }
          ]
        },
        "sendBody": true,
        "bodyContentType": "json",
        "jsonBody": "={{ $json }}",
        "options": {}
      },
      "id": "send-to-supabase",
      "name": "Send to Supabase Function",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [900, 220]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": true, \"processed\": true } }}"
      },
      "id": "success-response-inbound",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1120, 220]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": false, \"error\": \"Invalid WhatsApp webhook format\" } }}",
        "options": {
          "responseCode": 400
        }
      },
      "id": "error-response-format",
      "name": "Error Response - Invalid Format",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [680, 380]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": false, \"error\": \"Failed to process message\" } }}",
        "options": {
          "responseCode": 500
        }
      },
      "id": "error-response-processing",
      "name": "Error Response - Processing Failed", 
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1120, 380]
    }
  ],
  "connections": {
    "Webhook - Receive from WhatsApp": {
      "main": [
        [
          {
            "node": "Validate WhatsApp Format",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate WhatsApp Format": {
      "main": [
        [
          {
            "node": "Format Message Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response - Invalid Format",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Message Data": {
      "main": [
        [
          {
            "node": "Send to Supabase Function",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to Supabase Function": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-01-31T00:00:00.000Z",
  "versionId": "1"
}