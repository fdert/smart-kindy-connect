{
  "name": "WhatsApp Custom Script Inbound - School System",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "whatsapp-inbound",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-inbound",
      "name": "Webhook - Receive from Your Script",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "inbound-webhook-id"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.phone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists"
              }
            },
            {
              "leftValue": "={{ $json.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "validate-custom-format",
      "name": "Validate Custom Script Format",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "// Format data from your custom script to Supabase format\nconst inputData = $input.all()[0].json;\n\n// Format the data for Supabase inbound function\nconst formattedData = {\n  from: inputData.phone || inputData.from,\n  message_id: inputData.message_id || `msg_${Date.now()}`,\n  timestamp: inputData.timestamp || Math.floor(Date.now() / 1000).toString(),\n  message_type: 'text',\n  message_body: inputData.message || inputData.text,\n  contact_name: inputData.contact_name || inputData.name || '',\n  wa_id: inputData.phone || inputData.from,\n  // Add any additional metadata from your script\n  metadata: {\n    source: 'custom_script',\n    original_data: inputData\n  }\n};\n\nreturn [{ json: formattedData }];"
      },
      "id": "format-custom-data",
      "name": "Format Custom Script Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 220]
    },
    {
      "parameters": {
        "url": "https://ytjodudlnfamvnescumu.supabase.co/functions/v1/whatsapp-inbound",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inl0am9kdWRsbmZhbXZuZXNjdW11Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY1MTYwMzgsImV4cCI6MjA3MjA5MjAzOH0.sXV4caS0mPZ_CjEIzgenbCpQYDhT21T5wuYMUPNisFY"
            },
            {
              "name": "X-Tenant-ID", 
              "value": "22222222-2222-2222-2222-222222222222"
            }
          ]
        },
        "sendBody": true,
        "bodyContentType": "json",
        "jsonBody": "={{ $json }}",
        "options": {}
      },
      "id": "send-to-supabase",
      "name": "Send to Supabase Function",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [900, 220]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": true, \"processed\": true } }}"
      },
      "id": "success-response-inbound",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1120, 220]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": false, \"error\": \"Invalid WhatsApp webhook format\" } }}",
        "options": {
          "responseCode": 400
        }
      },
      "id": "error-response-format",
      "name": "Error Response - Invalid Format",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [680, 380]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": false, \"error\": \"Failed to process message\" } }}",
        "options": {
          "responseCode": 500
        }
      },
      "id": "error-response-processing",
      "name": "Error Response - Processing Failed", 
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1120, 380]
    }
  ],
  "connections": {
    "Webhook - Receive from Your Script": {
      "main": [
        [
          {
            "node": "Validate Custom Script Format",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Custom Script Format": {
      "main": [
        [
          {
            "node": "Format Custom Script Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response - Invalid Format",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Custom Script Data": {
      "main": [
        [
          {
            "node": "Send to Supabase Function",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to Supabase Function": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-01-31T00:00:00.000Z",
  "versionId": "1"
}